package com.eugenefe.entity;

// Generated Apr 10, 2013 4:09:22 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.Filters;

import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;


/**
 * VcvMatrixHis generated by hbm2java
 */
@Entity
@Table(name = "VCV_MATRIX_HIS")
@Filters({@Filter(name="filterBtwnDate" )	,@Filter(name="filterCurrentDate")})
@AnnoNavigationFilter
public class VolatilityHis implements java.io.Serializable {

	public VolatilityHisId id;
	public Basedate basedate;
	public Volatility volatility;
	public MarketVariable riskFactor;
	public MarketVariable refRiskFactor;
	public BigDecimal covariance;
	public BigDecimal correl;

	public VolatilityHis() {
	}


	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "bssd", column = @Column(name = "BSSD", nullable = false, length = 8)),
			@AttributeOverride(name = "vcvId", column = @Column(name = "VCV_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "rfId", column = @Column(name = "RF_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "refRfId", column = @Column(name = "REF_RF_ID", nullable = false, length = 20)) })
	@NotNull
	@AnnoMethodTree(order=10, init=true)
	public VolatilityHisId getId() {
		return this.id;
	}

	public void setId(VolatilityHisId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "BSSD", nullable = false, insertable = false, updatable = false)
	@NotNull
	@AnnoMethodTree(order=20, init=false)
	public Basedate getBasedate() {
		return this.basedate;
	}

	public void setBasedate(Basedate basedate) {
		this.basedate = basedate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RF_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	@AnnoMethodTree(order=30, init=false)
	public MarketVariable getRiskFactor() {
		return this.riskFactor;
	}

	public void setRiskFactor(MarketVariable riskFactor) {
		this.riskFactor = riskFactor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REF_RF_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	@AnnoMethodTree(order=40, init=false)
	public MarketVariable getRefRiskFactor() {
		return this.refRiskFactor;
	}

	public void setRefRiskFactor(MarketVariable refRiskFactor) {
		this.refRiskFactor = refRiskFactor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "VCV_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	@AnnoMethodTree(order=50, init=false)
	public Volatility getVolatility() {
		return this.volatility;
	}

	public void setVolatility(Volatility volatility) {
		this.volatility = volatility;
	}

	@Column(name = "COVARIANCE", scale = 4)
	@AnnoMethodTree(order=60, init=true, align="right")
//	@AnnoMethodTree(order=60, init=true)
	public BigDecimal getCovariance() {
		return this.covariance;
	}

	public void setCovariance(BigDecimal covariance) {
		this.covariance = covariance;
	}

	@Column(name = "CORREL", precision = 10, scale = 4)
	@AnnoMethodTree(order=70, init=true, align="right")
//	@AnnoMethodTree(order=70, init=true)
	public BigDecimal getCorrel() {
		return this.correl;
	}

	public void setCorrel(BigDecimal correl) {
		this.correl = correl;
	}


//	@AnnoMethodTree(order=11, init=false)
//	@Transient
//	@Override
//	public String getIdString() {
//		return this.id.toString();
//	}
	
	

}
