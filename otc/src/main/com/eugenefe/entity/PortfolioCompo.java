package com.eugenefe.entity;

// Generated 2014. 2. 10 ¿ÀÈÄ 5:51:10 by Hibernate Tools 4.0.0

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;

/**
 * PortfolioCompo generated by hbm2java
 */
@Entity
@Table(name = "PORTFOLIO_COMPO")
@AnnoNavigationFilter
public class PortfolioCompo implements java.io.Serializable {

//	private String portfolioId;
//	private String childPortId;
	private PortfolioCompoId id;
	private Portfolio portfolio;
	private Portfolio childPortfolio;
//	private double portWeight;
	private BigDecimal portWeight;
	
	public PortfolioCompo() {
	}
	

	public PortfolioCompo(PortfolioCompoId id) {
		this.id = id;
	}

//	public PortfolioCompo(PortfolioCompoId id, BigDecimal portWeight) {
//		this.id = id;
//		this.portWeight = portWeight;
//	}
	
	public PortfolioCompo(Portfolio portfolio, Portfolio childPortfolio, double weight ) {
		this.id = new PortfolioCompoId(portfolio.getPortId(), childPortfolio.getPortId());
		this.portfolio = portfolio;
		this.childPortfolio = childPortfolio;
		this.portWeight = new BigDecimal(weight);
	}


	@EmbeddedId
//	@AttributeOverrides({
//			@AttributeOverride(name = "hierarchyId", column = @Column(name = "HIERARCHY_ID", nullable = false, length = 20)),
//			@AttributeOverride(name = "nodeId", column = @Column(name = "NODE_ID", nullable = false, length = 20)) })
	@AnnoMethodTree(order =10, init=true)
	public PortfolioCompoId getId() {
		return id;
	}

	public void setId(PortfolioCompoId id) {
		this.id = id;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "PORTFOLIO_ID", nullable=true, insertable=false, updatable=false)
	@AnnoMethodTree(order =15, init=true)
	public Portfolio getPortfolio() {
		return portfolio;
	}


	public void setPortfolio(Portfolio portfolio) {
		this.portfolio = portfolio;
	}	
	
	
//	public PortfolioNew getPortfolio() {
//		return portfolio;
//	}
//
//	public void setPortfolio(PortfolioNew portfolio) {
//		this.portfolio = portfolio;
//	}

	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "CHILD_PORTFOLIO_ID", nullable=true, insertable=false, updatable=false)
	@AnnoMethodTree(order =20, init=true)
	public Portfolio getChildPortfolio() {
		return childPortfolio;
	}
	public void setChildPortfolio(Portfolio childPortfolio) {
		this.childPortfolio = childPortfolio;
	}


	

//	public PortfolioNew getChildPortfolio() {
//		return childPortfolio;
//	}
//	public void setChildPortfolio(PortfolioNew childPortfolio) {
//		this.childPortfolio = childPortfolio;
//	}

	
	@Column(name = "PORT_WEIGHT", precision = 4, scale = 2)
//	@Type(type="double")
	@AnnoMethodTree(order =30, init=true)
	public BigDecimal getPortWeight() {
		return portWeight;
	}

	public void setPortWeight(BigDecimal portWeight) {
		this.portWeight = portWeight;
	}
	
	
//	public BigDecimal getPortWeight() {
//		return this.portWeight;
//	}
//	public void setPortWeight(BigDecimal portWeight) {
//		this.portWeight = portWeight;
//	}

}
