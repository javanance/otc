package com.eugenefe.entity;

// Generated Nov 25, 2013 6:47:59 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Calendar;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Type;

import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;
import com.eugenefe.util.FnCalendar;

/**
 * HifiveStrike generated by hbm2java
 */
@Entity
@Table(name = "HIFIVE_STRIKE")
@AnnoNavigationFilter
public class HifiveStrike implements java.io.Serializable, Cloneable{

	private HifiveStrikeId id;
	private Hifive hifive;
	private String strikeDate;
	private String paymentDate;
//	private Date strikeDate;
//	private Date paymentDate;
	private Date pDate;
	private BigDecimal strikePrice;
	private BigDecimal dblJumpStrike;
	private BigDecimal tplJumpStrike;
	private BigDecimal payoffAmt;
	private BigDecimal dblJumpPayoff;
	private BigDecimal tplJumpPayoff;
	private BigDecimal couponRate;
	private BigDecimal upBarrier;

	public HifiveStrike() {
	}

	public HifiveStrike(HifiveStrikeId id, Hifive hifive, BigDecimal strikePrice) {
		this.id = id;
		this.hifive = hifive;
		this.strikePrice = strikePrice;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "prodId", column = @Column(name = "PROD_ID", nullable = false, length = 20)),
			@AttributeOverride(name = "strikeSerial", column = @Column(name = "STRIKE_SERIAL", nullable = false, precision = 10, scale = 0)) })
	@AnnoMethodTree(order=10, init=true)
	public HifiveStrikeId getId() {
		return this.id;
	}

	public void setId(HifiveStrikeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROD_ID", nullable = false, insertable = false, updatable = false)
	@AnnoMethodTree(order=20, init=true)
	public Hifive getHifive() {
		return this.hifive;
	}

	public void setHifive(Hifive hifive) {
		this.hifive = hifive;
	}

	@Column(name = "STRIKE_DATE", length = 8)
	@AnnoMethodTree(order=21, init=true)
	public String getStrikeDate() {
		return this.strikeDate;
	}

	public void setStrikeDate(String strikeDate) {
		this.strikeDate = strikeDate;
	}
	
//	@Column(name = "STRIKE_DATE", length = 8)
//	@Type(type="date")
//	@AnnoMethodTree(order=21, init=true)
//	public Date getStrikeDate() {
//		return strikeDate;
//	}
//	public void setStrikeDate(Date strikeDate) {
//		this.strikeDate = strikeDate;
//	}

	
	@Column(name = "PAYMENT_DATE", length = 8)
	@AnnoMethodTree(order=22, init=true)
	public String getPaymentDate() {
		return this.paymentDate;
	}

	public void setPaymentDate(String paymentDate) {
		this.paymentDate = paymentDate;
	}

//	@Column(name = "PAYMENT_DATE", length = 8)
//	@Type(type="date")
//	@AnnoMethodTree(order=22, init=true)
//	public Date getPaymentDate() {
//		return paymentDate;
//	}
//
//	public void setPaymentDate(Date paymentDate) {
//		this.paymentDate = paymentDate;
//	}
	@Transient
//	@Column(name = "PDATE")
//	@Type(type="date")
	public Date getpDate() {
		return pDate;
	}
	public void setpDate(Date pDate) {
		this.pDate = pDate;
	}

	@Column(name = "STRIKE_PRICE", nullable = false, precision = 10, scale = 4)
	@AnnoMethodTree(order=30, init=true)
	public BigDecimal getStrikePrice() {
		return this.strikePrice;
	}
	public void setStrikePrice(BigDecimal strikePrice) {
		this.strikePrice = strikePrice;
	}

	@Column(name = "DBL_JUMP_STRIKE", precision = 10, scale = 4)
	@AnnoMethodTree(order=31, init=true)
	public BigDecimal getDblJumpStrike() {
		return this.dblJumpStrike;
	}

	public void setDblJumpStrike(BigDecimal dblJumpStrike) {
		this.dblJumpStrike = dblJumpStrike;
	}

	@Column(name = "TPL_JUMP_STRIKE", precision = 10, scale = 4)
	@AnnoMethodTree(order=32, init=true)
	public BigDecimal getTplJumpStrike() {
		return this.tplJumpStrike;
	}

	public void setTplJumpStrike(BigDecimal tplJumpStrike) {
		this.tplJumpStrike = tplJumpStrike;
	}

	@Column(name = "PAYOFF_AMT", precision = 10, scale = 4)
	@AnnoMethodTree(order=40, init=true)
	public BigDecimal getPayoffAmt() {
		return this.payoffAmt;
	}

	public void setPayoffAmt(BigDecimal payoffAmt) {
		this.payoffAmt = payoffAmt;
	}

	@Column(name = "DBL_JUMP_PAYOFF", precision = 10, scale = 4)
	@AnnoMethodTree(order=41, init=true)
	public BigDecimal getDblJumpPayoff() {
		return this.dblJumpPayoff;
	}

	public void setDblJumpPayoff(BigDecimal dblJumpPayoff) {
		this.dblJumpPayoff = dblJumpPayoff;
	}

	@Column(name = "TPL_JUMP_PAYOFF", precision = 10, scale = 4)
	@AnnoMethodTree(order=42, init=true)
	public BigDecimal getTplJumpPayoff() {
		return this.tplJumpPayoff;
	}

	public void setTplJumpPayoff(BigDecimal tplJumpPayoff) {
		this.tplJumpPayoff = tplJumpPayoff;
	}

	@Column(name = "COUPON_RATE", precision = 10, scale = 4)
	@AnnoMethodTree(order=50, init=true)
	public BigDecimal getCouponRate() {
		return this.couponRate;
	}

	public void setCouponRate(BigDecimal couponRate) {
		this.couponRate = couponRate;
	}

	@Column(name = "UP_BARRIER", precision = 10, scale = 4)
	@AnnoMethodTree(order=60, init=true)
	public BigDecimal getUpBarrier() {
		return this.upBarrier;
	}

	public void setUpBarrier(BigDecimal upBarrier) {
		this.upBarrier = upBarrier;
	}

	@Transient
	@Override
	public Object clone(){
		try{
			return super.clone();
		}catch(Exception e){
			
		}
		return null;
	}
	@Transient
	public FnCalendar getFnStrikeDate(){
		int year = Integer.parseInt(this.getStrikeDate().substring(0, 3));
		int month = Integer.parseInt(this.getStrikeDate().substring(4,5));
		int day = Integer.parseInt(this.getStrikeDate().substring(6,7));
		
		return new FnCalendar(year, month, day);
		
	}
	
	@Transient
	public FnCalendar getFnPaymentDate(){
		int year = Integer.parseInt(this.getPaymentDate().substring(0, 3));
		int month = Integer.parseInt(this.getPaymentDate().substring(4,5));
		int day = Integer.parseInt(this.getPaymentDate().substring(6,7));
		
		return new FnCalendar(year, month, day);
	}
}
