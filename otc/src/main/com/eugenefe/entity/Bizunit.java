package com.eugenefe.entity;

// Generated Apr 16, 2013 7:33:55 PM by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;
import com.eugenefe.util.EColumnType;

/**
 * Bizunit generated by hbm2java
 */
@Entity
@Table(name = "BIZUNIT")
@AnnoNavigationFilter
public class Bizunit implements java.io.Serializable, ITree {

	private String orgId;
	private Bizunit parentBizunit;
	private String parentOrgId;
	private String parentOrgName;
	private String orgName;
	private String orgRole;
	private String orgType;
	private String openDate;
	private String closeDate;
	private String useYN;
//	private Set<Employee> employees = new HashSet<Employee>(0);
	private List<Employee> employees = new ArrayList<Employee>();
	private List<Bizunit> childBizunits = new ArrayList<Bizunit>();

	public Bizunit() {
	}

	public Bizunit(String orgId) {
		this.orgId = orgId;
	}


	@Id
	@Column(name = "ORG_ID", nullable = false, length = 20)
	@AnnoMethodTree(order =10, init=true, aggregatable=true)
	public String getOrgId() {
		return this.orgId;
	}

	public void setOrgId(String orgId) {
		this.orgId = orgId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_ORG_ID")
	@AnnoMethodTree(order =30, init=false, aggregatable=true)
	public Bizunit getParentBizunit() {
		return this.parentBizunit;
	}

	public void setParentBizunit(Bizunit parentBizunit) {
		this.parentBizunit = parentBizunit;
	}

	@Transient
	@AnnoMethodTree(order =31, navigatable=false, init=false, aggregatable=true)	
	public String getParentOrgId() {
//		if(parentOrgId==null && parentBizunit!=null){
//			parentOrgId = parentBizunit.orgId;
//		}
//		return parentOrgId;
		return parentBizunit.getOrgId();
	}

	public void setParentOrgId(String parentOrgId) {
		this.parentOrgId = parentOrgId;
	}

	@Transient
	@AnnoMethodTree(order =32, navigatable=false, init=false, aggregatable=true)
	public String getParentOrgName() {
//		if(parentOrgName==null && parentBizunit!=null){
//			parentOrgName = parentBizunit.getOrgName;
//		}
//		return parentOrgName;
		return parentBizunit.getOrgName();
	}
	public void setParentOrgName(String parentOrgName) {
		this.parentOrgName = parentOrgName;
	}

	@Column(name = "ORG_NAME", length = 50)
	@AnnoMethodTree(order =20, init=true, aggregatable=true)
	public String getOrgName() {
		return this.orgName;
	}
	public void setOrgName(String orgName) {
		this.orgName = orgName;
	}
	
	@Column(name = "ORG_ROLE")
	@AnnoMethodTree(order =21, init=true, aggregatable=true)
	public String getOrgRole() {
		return orgRole;
	}

	public void setOrgRole(String orgRole) {
		this.orgRole = orgRole;
	}
	
	@Column(name = "ORG_TYPE")
	@AnnoMethodTree(order =22, init=true, aggregatable=true)
	public String getOrgType() {
		return orgType;
	}

	public void setOrgType(String orgType) {
		this.orgType = orgType;
	}

//	@Transient
	@Column(name = "OPEN_DATE")
	@AnnoMethodTree(order =23, init=true, aggregatable=true)
	public String getOpenDate() {
		return openDate;
	}

	public void setOpenDate(String openDate) {
		this.openDate = openDate;
	}

//	@Transient
	@Column(name = "CLOSE_DATE")
	@AnnoMethodTree(order =24, init=true, aggregatable=true)
	public String getCloseDate() {
		return closeDate;
	}

	public void setCloseDate(String closeDate) {
		this.closeDate = closeDate;
	}
	
//	@Transient
	@Column(name = "USE_YN")
	@AnnoMethodTree(order =25, init=true, aggregatable=true)
	public String getUseYN() {
		return useYN;
	}

	public void setUseYN(String useYN) {
		this.useYN = useYN;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bizunit")
	@AnnoMethodTree(order =40, init=false, type=EColumnType.List)
	public List<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(List<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parentBizunit")
	@AnnoMethodTree(order =50, init=false, type=EColumnType.List)
	public List<Bizunit> getChildBizunits() {
		return this.childBizunits;
	}

	public void setChildBizunits(List<Bizunit> childBizunits) {
		this.childBizunits = childBizunits;
	}

	@Transient
	@Override
	public String getId() {
//		return getOrgId();
		return getOrgName();
	}
	@Transient
	@Override
	public List<? extends ITree> getChildren() {
		return getChildBizunits();
	}

}
