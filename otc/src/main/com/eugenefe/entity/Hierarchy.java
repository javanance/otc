package com.eugenefe.entity;

// Generated 2014. 2. 10 ¿ÀÈÄ 5:51:10 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;



import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.IndexColumn;

import com.eugenefe.entity.component.PropertyEquation;
import com.eugenefe.entity.component.PropertyEquationNew;
import com.eugenefe.enums.EBoolean;
import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;
import com.eugenefe.util.EColumnType;

/**
 * Hierarchy generated by hbm2java
 */
@Entity
@Table(name = "HIERARCHY")
@AnnoNavigationFilter
public class Hierarchy implements java.io.Serializable {

	private String hierarchyId;
	private String hierarchyName;
	private EBoolean useable;
	private EBoolean changeable;
//	private List<HierarchyDetail> hierarchyDetailList = new ArrayList<HierarchyDetail>();
	private List<PropertyEquationNew> hierDefineIndexList = new ArrayList<PropertyEquationNew>();
	private List<Portfolio> portfolioList = new ArrayList<Portfolio>();

	public Hierarchy() {
	}

	public Hierarchy(String hierarchyId) {
		this.hierarchyId = hierarchyId;
	}

	public Hierarchy(String hierarchyId, String hierarchyName, EBoolean useYn) {
		this.hierarchyId = hierarchyId;
		this.hierarchyName = hierarchyName;
		this.useable = useYn;
	}

	@Id
	@Column(name = "HIERARCHY_ID", unique = true, nullable = false, length = 20)
	@AnnoMethodTree(order =10, init=true)
	public String getHierarchyId() {
		return this.hierarchyId;
	}

	public void setHierarchyId(String hierarchyId) {
		this.hierarchyId = hierarchyId;
	}

	@Column(name = "HIERARCHY_NAME", length = 50)
	@AnnoMethodTree(order =20, init=true)
	public String getHierarchyName() {
		return this.hierarchyName;
	}

	public void setHierarchyName(String hierarchyName) {
		this.hierarchyName = hierarchyName;
	}

	@Column(name = "USE_YN", length = 1)
	@AnnoMethodTree(order =30, init=true)
	@Enumerated(EnumType.STRING)
	public EBoolean getUseable() {
		return this.useable;
	}

	public void setUseable(EBoolean useable) {
		this.useable = useable;
	}

	@Column(name = "CHANGEABLE", length = 1)
	@AnnoMethodTree(order =31, init=true)
	@Enumerated(EnumType.STRING)
	public EBoolean getChangeable() {
		return changeable;
	}

	public void setChangeable(EBoolean changeable) {
		this.changeable = changeable;
	}
	
	
//	@OneToMany(mappedBy="hierarchy")
//	@IndexColumn(name ="LVL" ,base=1)
//	@AnnoMethodTree(order =35, init=false, type=EColumnType.List)
//	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.DELETE})
//	public List<HierarchyDetail> getHierarchyDetailList() {
//		return hierarchyDetailList;
//	}



//	public void setHierarchyDetailList(List<HierarchyDetail> hierarchyDetailList) {
//		this.hierarchyDetailList = hierarchyDetailList;
//	}

	@OneToMany(mappedBy="hierarchy", cascade={javax.persistence.CascadeType.MERGE, javax.persistence.CascadeType.PERSIST, javax.persistence.CascadeType.REMOVE})
	@AnnoMethodTree(order =40, init=false, type=EColumnType.List)
//	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.DELETE, CascadeType.ALL})
	public List<Portfolio> getPortfolioList() {
		return portfolioList;
	}

	public void setPortfolioList(List<Portfolio> portfolioList) {
		this.portfolioList = portfolioList;
	}

	
	
//	@Transient
	@ElementCollection
	@CollectionTable(name="HIERARCHY_DETAIL_NEW", joinColumns=@JoinColumn(name ="HIERARCHY_ID"))
//	@IndexColumn(name="LVL", base=1	)
	@IndexColumn(name="HIER_LEVEL", base=1	)
	public List<PropertyEquationNew> getHierDefineIndexList() {
		return hierDefineIndexList;
	}

	public void setHierDefineIndexList(List<PropertyEquationNew> hierDefineIndexList) {
		this.hierDefineIndexList = hierDefineIndexList;
	}
}
