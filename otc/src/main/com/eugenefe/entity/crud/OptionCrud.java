package com.eugenefe.entity.crud;

// Generated Apr 10, 2013 4:09:22 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;

import com.eugenefe.enums.EBarrierType;
import com.eugenefe.enums.EBoolean;
import com.eugenefe.enums.EDigitalType;
import com.eugenefe.enums.EExoticOptionType;
import com.eugenefe.enums.EOptionType;
import com.eugenefe.enums.raw.EElsEventEvaluationType;
import com.eugenefe.enums.raw.EElsObserveFrequencyType;
import com.eugenefe.enums.raw.EElsReturnEvaluationType;

/**
 * Options generated by hbm2java
 */
@Entity
@Table(name = "OTC_OPTIONS")
public class OptionCrud implements java.io.Serializable {

	private String optionId;
	private String underlyingId;
	private String optionName;
	private EOptionType optionType;
	private EExoticOptionType exoticType;
	private EBarrierType barrierType;
	private EDigitalType digitalType;
	private EElsObserveFrequencyType observationType;
	private EElsEventEvaluationType eventEvalType;
	private EElsReturnEvaluationType returnEvalType;
	private EBoolean basketYn;
	private String issuerId;
//	private String exchangeId;
	private String issueDate;
	private String maturityDate;
	private BigDecimal basePrice;
	private BigDecimal strikePrice;
	private BigDecimal upBarrier;
	private BigDecimal downBarrier;
	private BigDecimal digitalPayoff;
	private Long multiplier;
	private BigDecimal conversionRatio;
	private String sourceTable;
	private String userName;
	private String lastUpdated;
	private BigDecimal versionNo;
//	private Set<OptionHis> optionHises = new HashSet<OptionHis>(0);

	public OptionCrud() {
	}

	@Id
	@Column(name = "OPTION_ID", unique = true, nullable = false, length = 20)
	public String getOptionId() {
		return optionId;
	}
	public void setOptionId(String optionId) {
		this.optionId = optionId;
	}

	@Column(name = "UNDERLYING_ID")
	public String getUnderlyingId() {
		return underlyingId;
	}
	public void setUnderlyingId(String underlyingId) {
		this.underlyingId = underlyingId;
	}	

	@Column(name = "OPTION_NAME", length = 50)
	@Size(max = 50)
	public String getOptionName() {
		return this.optionName;
	}
	public void setOptionName(String optionName) {
		this.optionName = optionName;
	}

	@Column(name = "OPTION_TYPE", length = 10)
	@Enumerated(EnumType.STRING)
	public EOptionType getOptionType() {
		return this.optionType;
	}

	public void setOptionType(EOptionType optionType) {
		this.optionType = optionType;
	}

	@Column(name = "EXOTIC_TYPE", length = 10)
	@Enumerated(EnumType.STRING)
	public EExoticOptionType getExoticType() {
		return this.exoticType;
	}

	public void setExoticType(EExoticOptionType exoticType) {
		this.exoticType = exoticType;
	}

	@Column(name = "ISSUE_DATE", length = 8)
	@Size(max = 8)
	public String getIssueDate() {
		return this.issueDate;
	}

	public void setIssueDate(String issueDate) {
		this.issueDate = issueDate;
	}

	@Column(name = "MATURITY_DATE", length = 8)
	@Size(max = 8)
	public String getMaturityDate() {
		return this.maturityDate;
	}

	public void setMaturityDate(String maturityDate) {
		this.maturityDate = maturityDate;
	}
	@Column(name = "BASE_PRICE", precision = 10, scale = 4)
	public BigDecimal getBasePrice() {
		return basePrice;
	}

	public void setBasePrice(BigDecimal basePrice) {
		this.basePrice = basePrice;
	}

	@Column(name = "STRIKE_PRICE", precision = 10, scale = 4)
	public BigDecimal getStrikePrice() {
		return this.strikePrice;
	}

	public void setStrikePrice(BigDecimal strikePrice) {
		this.strikePrice = strikePrice;
	}

	@Column(name = "MULTIPLIER", precision = 10, scale = 0)
	public Long getMultiplier() {
		return this.multiplier;
	}

	public void setMultiplier(Long multiplier) {
		this.multiplier = multiplier;
	}

	@Column(name = "CONVERSION_RATIO", precision = 10, scale = 4)
	public BigDecimal getConversionRatio() {
		return this.conversionRatio;
	}

	public void setConversionRatio(BigDecimal conversionRatio) {
		this.conversionRatio = conversionRatio;
	}

	@Column(name = "SOURCE_TABLE", length = 50)
	@Size(max = 50)
	public String getSourceTable() {
		return this.sourceTable;
	}

	public void setSourceTable(String sourceTable) {
		this.sourceTable = sourceTable;
	}

	@Column(name = "USER_NAME", length = 20)
	@Size(max = 20)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "LAST_UPDATED", length = 8)
	@Size(max = 8)
	public String getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(String lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "VERSION_NO", precision = 22, scale = 0)
	public BigDecimal getVersionNo() {
		return this.versionNo;
	}

	public void setVersionNo(BigDecimal versionNo) {
		this.versionNo = versionNo;
	}

	@Column(name = "ISSUER_ID", length = 20)
	@Size(max = 20)
	public String getIssuerId() {
		return this.issuerId;
	}

	public void setIssuerId(String issuerId) {
		this.issuerId = issuerId;
	}

//	@Column(name = "EXCHANGE_ID", length = 20)
//	@Size(max = 20)
//	public String getExchangeId() {
//		return this.exchangeId;
//	}
//
//	public void setExchangeId(String exchangeId) {
//		this.exchangeId = exchangeId;
//	}

	@Column(name = "BARRIER_TYPE", length = 20)
	@Enumerated(EnumType.STRING)
	public EBarrierType getBarrierType() {
		return barrierType;
	}
	public void setBarrierType(EBarrierType barrierType) {
		this.barrierType = barrierType;
	}
	
	@Column(name = "DIGITAL_TYPE", length = 20)
	@Enumerated(EnumType.STRING)
	public EDigitalType getDigitalType() {
		return digitalType;
	}

	public void setDigitalType(EDigitalType digitalType) {
		this.digitalType = digitalType;
	}
	
	@Column(name = "UP_BARRIER")
	public BigDecimal getUpBarrier() {
		return upBarrier;
	}

	public void setUpBarrier(BigDecimal upBarrier) {
		this.upBarrier = upBarrier;
	}
	
	@Column(name = "DOWN_BARRIER")
	public BigDecimal getDownBarrier() {
		return downBarrier;
	}

	public void setDownBarrier(BigDecimal downBarrier) {
		this.downBarrier = downBarrier;
	}
	
	@Column(name = "DIGITAL_PAYOFF")
	public BigDecimal getDigitalPayoff() {
		return digitalPayoff;
	}

	public void setDigitalPayoff(BigDecimal digitalPayoff) {
		this.digitalPayoff = digitalPayoff;
	}

	@Column(name = "OBSERVATION_TYPE")
	@Enumerated(EnumType.STRING)
	public EElsObserveFrequencyType getObservationType() {
		return observationType;
	}
	public void setObservationType(EElsObserveFrequencyType observationType) {
		this.observationType = observationType;
	}
	
	@Column(name = "EVENT_EVAL_TYPE")
	@Enumerated(EnumType.STRING)
	public EElsEventEvaluationType getEventEvalType() {
		return eventEvalType;
	}
	public void setEventEvalType(EElsEventEvaluationType eventEvalType) {
		this.eventEvalType = eventEvalType;
	}
	@Column(name = "RETURN_EVAL_TYPE")
	@Enumerated(EnumType.STRING)
	public EElsReturnEvaluationType getReturnEvalType() {
		return returnEvalType;
	}

	public void setReturnEvalType(EElsReturnEvaluationType returnEvalType) {
		this.returnEvalType = returnEvalType;
	}

	@Column(name = "BASKET_YN")
	@Enumerated(EnumType.STRING)
	public EBoolean getBasketYn() {
		return basketYn;
	}

	public void setBasketYn(EBoolean basketYn) {
		this.basketYn = basketYn;
	}
	
}
