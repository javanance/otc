package com.eugenefe.entity;

// Generated Nov 25, 2013 6:47:59 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Type;

import com.eugenefe.enums.EBarrierType;
import com.eugenefe.enums.raw.EElsObserveFrequencyType;
import com.eugenefe.enums.raw.EElsSmtnSatisfactionType;
import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;
import com.eugenefe.util.FnCalendar;

/**
 * HifiveStrike generated by hbm2java
 */
@Entity
@Table(name = "HIFIVE_CONDITION")
@AnnoNavigationFilter
public class HifiveCondition implements java.io.Serializable, Cloneable, Comparable<HifiveCondition>{

	private HifiveConditionId id;
	private Hifive hifive;
//	private EEConditionType conditionType ;
	private String conditionType;
	private String conditionStDate;
	private String conditionEndDate;
	private String barrierType;
	private BigDecimal barrierRate;
//	private String observeType;
//	private String smtmType;
	private EElsObserveFrequencyType observeType;
	private EElsSmtnSatisfactionType smtmType;
	private BigDecimal changeUpRate;
	private BigDecimal spikeRate;
	private BigDecimal safezoneRate;

	public HifiveCondition() {
	}


	@EmbeddedId
	@AnnoMethodTree(order=10, init=true)
	public HifiveConditionId getId() {
		return this.id;
	}

	public void setId(HifiveConditionId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROD_ID", nullable = false, insertable = false, updatable = false)
	@AnnoMethodTree(order=20, init=true)
	public Hifive getHifive() {
		return this.hifive;
	}

	public void setHifive(Hifive hifive) {
		this.hifive = hifive;
	}

//	@Column(name = "CONDITION_TYPE")
//	@AnnoMethodTree(order=21, init=true)
//	public String getConditionType() {
//		return conditionType;
//	}
//
//
//	public void setConditionType(String conditionType) {
//		this.conditionType = conditionType;
//	}

	@Column(name = "CONDITION_NAME")
//	@Enumerated(EnumType.STRING)
	public String getConditionType() {
		return conditionType;
	}
	public void setConditionType(String conditionType) {
		this.conditionType = conditionType;
	}


	@Column(name = "CD_START_DT")
	@AnnoMethodTree(order=22, init=true)
	public String getConditionStDate() {
		return conditionStDate;
	}


	public void setConditionStDate(String conditionStDate) {
		this.conditionStDate = conditionStDate;
	}

	@Column(name = "CD_END_DT")
	@AnnoMethodTree(order=23, init=true)
	public String getConditionEndDate() {
		return conditionEndDate;
	}


	public void setConditionEndDate(String conditionEndDate) {
		this.conditionEndDate = conditionEndDate;
	}

	@Column(name = "BARRIER_TYPE")
	@AnnoMethodTree(order=30, init=true)
	public String getBarrierType() {
		return barrierType;
	}


	public void setBarrierType(String barrierType) {
		this.barrierType = barrierType;
	}

	@Column(name = "BARRIER_RATE")
	@AnnoMethodTree(order=31, init=true)
	public BigDecimal getBarrierRate() {
		return barrierRate;
	}


	public void setBarrierRate(BigDecimal barrierRate) {
		this.barrierRate = barrierRate;
	}

	@Column(name = "OBSERVE_TYPE")
	@AnnoMethodTree(order=32, init=true)
	@Enumerated(EnumType.STRING)
	public EElsObserveFrequencyType getObserveType() {
		return observeType;
	}


	public void setObserveType(EElsObserveFrequencyType observeType) {
		this.observeType = observeType;
	}	
//	public String getObserveType() {
//		return observeType;
//	}
//
//
//	public void setObserveType(String observeType) {
//		this.observeType = observeType;
//	}

	@Column(name = "HITTING_TYPE")
	@AnnoMethodTree(order=33, init=true)
	@Enumerated(EnumType.STRING)
	public EElsSmtnSatisfactionType getSmtmType() {
		return smtmType;
	}


	public void setSmtmType(EElsSmtnSatisfactionType smtmType) {
		this.smtmType = smtmType;
	}

//	public String getSmtmType() {
//		return smtmType;
//	}
//	public void setSmtmType(String smtmType) {
//		this.smtmType = smtmType;
//	}

	@Column(name = "CHANGUP_RT", precision=4)
	@AnnoMethodTree(order=41, init=true)
	public BigDecimal getChangeUpRate() {
		return changeUpRate;
	}




	public void setChangeUpRate(BigDecimal changeUpRate) {
		this.changeUpRate = changeUpRate;
	}

	@Column(name = "SPIK_RT", precision=4)
	@AnnoMethodTree(order=42, init=true)
	public BigDecimal getSpikeRate() {
		return spikeRate;
	}


	public void setSpikeRate(BigDecimal spikeRate) {
		this.spikeRate = spikeRate;
	}

	@Column(name = "SAFEZONE_RT", precision=4)
	@AnnoMethodTree(order=43, init=true)
	public BigDecimal getSafezoneRate() {
		return safezoneRate;
	}
	public void setSafezoneRate(BigDecimal safezoneRate) {
		this.safezoneRate = safezoneRate;
	}
	
	@Transient
	public  static List<String> getColumnList(){
		List<String> columnList = new ArrayList<String>();
		columnList.add("getConditionType");
		columnList.add("getConditionStDate");
		columnList.add("getConditionEndDate");
		columnList.add("getBarrierType");
		columnList.add("getBarrierRate");
		columnList.add("getObserveType");
		columnList.add("getSmtmType");
		columnList.add("getChangeUpRate");
		columnList.add("getSpikeRate");
		columnList.add("getSafezoneRate");
		return columnList;
	}

	@Override
	@Transient
	public int compareTo(HifiveCondition o) {
		return this.getId().getProdCondId().compareTo(o.getId().getProdCondId());
	}	
}
