package com.eugenefe.entity;

// Generated Apr 10, 2013 4:09:22 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDefs;

/**
 * PortfolioDetail generated by hbm2java
 */
@Entity
// @Table(name = "PORTFOLIO_DETAIL", schema = "TAKION79")
@Table(name = "PORTFOLIO_DETAIL")
@Filter(name = "filterCurrentDatePortfolioDetail", condition = ":currentDate = BSSD")
public class PortfolioDetail implements java.io.Serializable {

	private PortfolioDetailId id;
	private Basedate basedate;
	private Portfolio portfolio;
	private Position position;

	public PortfolioDetail() {
	}

	public PortfolioDetail(PortfolioDetailId id, Basedate basedate, Portfolio portfolio, Position position) {
		this.id = id;
		this.basedate = basedate;
		this.portfolio = portfolio;
		this.position = position;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "bssd", column = @Column(name = "BSSD", nullable = false, length = 8)),
			@AttributeOverride(name = "portId", column = @Column(name = "PORT_ID", nullable = false, length = 50)),
			@AttributeOverride(name = "posId", column = @Column(name = "POS_ID", nullable = false, length = 50)) })
	@NotNull
	public PortfolioDetailId getId() {
		return this.id;
	}

	public void setId(PortfolioDetailId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BSSD", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Basedate getBasedate() {
		return this.basedate;
	}

	public void setBasedate(Basedate basedate) {
		this.basedate = basedate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PORT_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	public Portfolio getPortfolio() {
		return this.portfolio;
	}

	public void setPortfolio(Portfolio portfolio) {
		this.portfolio = portfolio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "POS_ID", nullable = false, insertable = false, updatable = false)
	@NotNull
	
	public Position getPosition() {
		return this.position;
	}

	public void setPosition(Position position) {
		this.position = position;
	}

}
