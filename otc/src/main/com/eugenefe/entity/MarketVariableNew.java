package com.eugenefe.entity;

// Generated Apr 10, 2013 4:09:22 PM by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Type;

import com.eugenefe.enums.EBoolean;
import com.eugenefe.util.AnnoMethodTree;
import com.eugenefe.util.AnnoNavigationFilter;
import com.eugenefe.util.MarketVariableType;

/**
 * MarketVariable generated by hbm2java
 */
@Entity
@Table(name = "MARKET_VARIABLE")
@AnnoNavigationFilter
public class MarketVariableNew implements java.io.Serializable , Comparable<MarketVariableNew>{

	private String mvId;
	private String mvName;
	private MarketVariableType mvType;
	private boolean product;
	private boolean riskFactor;
	private EBoolean underlyingYN;

//	private List<Position> positions = new ArrayList<Position>();

	public MarketVariableNew() {
	}

	public MarketVariableNew(String mvId) {
		this.mvId = mvId;
	}


	@Id
	@Column(name = "MV_ID", unique = true, nullable = false, length = 20)
	@NotNull
	@Size(max = 20)
	@AnnoMethodTree(order=10, init=true)
	public String getMvId() {
		return this.mvId;
	}
	public void setMvId(String mvId) {
		this.mvId = mvId;
	}
	
	@Column(name = "MV_NAME")
	@AnnoMethodTree(order=20, init=true)
	public String getMvName() {
		return mvName;
	}
	public void setMvName(String mvName) {
		this.mvName = mvName;
	}

	@Column(name = "MV_TYPE")
	@Enumerated(EnumType.STRING)
	@AnnoMethodTree(order=30, init=true)
	public MarketVariableType getMvType() {
		return mvType;
	}

	public void setMvType(MarketVariableType mvType) {
		this.mvType = mvType;
	}

	@Transient
//	@Column(name = "PRODUCT_YN")
//	@Type(type="yes_no")
//	@AnnoMethodTree(order=40, init=true)
	public boolean isProduct() {
		return product;
	}
	public void setProduct(boolean product) {
		this.product = product;
	}

	@Transient
//	@Column(name = "RF_YN")
//	@AnnoMethodTree(order=50, init=true)
//	@Type(type="yes_no")
	public boolean isRiskFactor() {
		return riskFactor;
	}

	public void setRiskFactor(boolean riskFactor) {
		this.riskFactor = riskFactor;
	}

//	@Column(name = "USE_AS_UNDERLYING_YN")
//	@AnnoMethodTree(order=60, init=true)
//	@Type(type="yes_no")
//	public boolean isUseAsUnderlying() {
//		return useAsUnderlying;
//	}
//
//	public void setUseAsUnderlying(boolean useAsUnderlying) {
//		this.useAsUnderlying = useAsUnderlying;
//	}
	@Column(name = "UNDERLYING_YN")
	@Enumerated(EnumType.STRING)
	@AnnoMethodTree(order=60, init=true)
	public EBoolean getUnderlyingYN() {
		return underlyingYN;
	}
	public void setUnderlyingYN(EBoolean underlyingYN) {
		this.underlyingYN = underlyingYN;
	}
	
	@Override
	public int compareTo(MarketVariableNew other) {
		return 10* this.mvType.getRfType().compareTo(other.mvType.getRfType())
				+ this.mvId.compareTo(other.mvId);
//		return 0;
	}

}
